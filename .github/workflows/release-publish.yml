# .github/workflows/release-publish.yml
name: Build, Release and Publish

permissions:
  id-token: write
  contents: write
  packages: write

on:
  workflow_dispatch

jobs:

  build:
    name: Build on (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python (host, for cibuildwheel CLI)
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install build tools
        run: python -m pip install -U pip build pytest cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_SKIP: "pp* *-musllinux_*"

      - name: Upload wheels as artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: dist/*.whl

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download all built wheels
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten dist directory
        run: |
          mkdir final_dist
          find dist -name '*.whl' -exec mv {} final_dist/ \;

      - name: Extract version
        id: get_version
        run: |
          VERSION=$(grep '^version =' pyproject.toml | sed -E "s/.*= *[\"'](.*)[\"']/\1/")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release with gh CLI
        run: |
          gh release create "v${{ env.VERSION }}" \
            --title "Release v${{ env.VERSION }}" \
            --notes "Automated release of version v${{ env.VERSION }}" \
            final_dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: restricted
      url: https://pypi.org/p/laser-core
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Download all built wheels
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten dist directory
        run: |
          mkdir final_dist
          find dist -name '*.whl' -exec mv {} final_dist/ \;

      - name: Extract version
        id: get_version
        run: |
          VERSION=$(grep '^version =' pyproject.toml | sed -E "s/.*= *[\"'](.*)[\"']/\1/")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          skip-existing: false
          packages-dir: final_dist
          verbose: true
          print-hash: true

          # sub: repo:InstituteforDiseaseModeling/laser:ref:refs/heads/main
          # repository: InstituteforDiseaseModeling/laser
          # repository_owner: InstituteforDiseaseModeling
          # repository_owner_id: 8324647
          # workflow_ref: InstituteforDiseaseModeling/laser/.github/workflows/release-publish.yml@refs/heads/main
          # job_workflow_ref: InstituteforDiseaseModeling/laser/.github/workflows/release-publish.yml@refs/heads/main
          # ref: refs/heads/main
